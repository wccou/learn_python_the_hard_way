继承和合成的 应 用 场 合
“继承  vs  合成”的问题说到底还是关于代码重用的问题。你不想到处都是重复的代码，这样既难看又没
效率。继承可以让你在基类里隐含父类的功能，从而解决了这个问题。而合成则是利用模块和别的类中
的函数调用实现了相同的目的。
如果两种方案都能解决重用的问题，那什么时候该用哪个呢？这个问题答案其实是非常主观的，不过我
可以给你三个大体的指引方案：
1. 不惜一切代价地避免多重继承，它带来的麻烦比能解决的问题都多。如果你非要用，那你得准备
好专研类的层次结构，以及花时间去找各种东西的来龙去脉吧。
2. 如果你有一些代码会在不同位置和场合应用到，那就用合成来把它们做成模块。
3. 只有在代码之间有清楚的关联，可以通过一个单独的共性联系起来的时候使用继承，或者你受现
有代码或者别的不可抗拒因素所限非用不可的话，那也用吧。